.books
  .row
    each userBook in books
      .col-xs-10.col-xs-offset-1.col-sm-offset-0.col-sm-3.col-md-2(id=userBook.id)
        .book(data-toggle='tooltip', title=userBook.book.title + " by "+ userBook.book.author)
          a(href=userBook.imageUrl || userBook.book.imageUrl)
            img.img-responsive(height="150", width="150", alt="book-"+userBook.book.title, src=userBook.imageUrl || userBook.book.imageUrl)
        .bookAction
          input.userBookId(type='hidden', value=userBook.id)
          - let userBookState = userBook.state.state
          if (userBook.user.equals(user._id))
            button.btn.btn-block.btn-danger.btn-sm(value="remove") Remove
            button.btn.btn-block.btn-warning.btn-sm(value="toggleRequestable")
              if (userBookState  == "unavailable")
                | No trades accepted
              else
                | Accepts trades
          else
            if (userBook.trades.length > 0)
              input.tradeId(type='hidden', value=userBook.trades[0].id)
              - let tradeState = userBook.trades[0].state.state;
              if (tradeState == 'pending')
                h4
                  span.label.label-default Trade Pending
                button.btn.btn-block.btn-danger.btn-sm(value="cancel") Cancel Request
              else if (tradeState == 'accepted')
                h4
                  span.label.label-success Trade Accepted
                button.btn.btn-block.btn-success.btn-sm(value="finish") Finish Trade
            else
                if (userBookState  == "traded")
                  h4
                    span.label.label-info Traded
                else
                  button.btn.btn-block.btn-primary.btn-sm(value="request")
                    | Request


#book-template(style='display: none')
  .col-xs-4.col-sm-3.col-md-2
    .book(data-toggle='tooltip', title='')
      a(href='')
        img.img-responsive(height="150", width="150", alt="", src='')
